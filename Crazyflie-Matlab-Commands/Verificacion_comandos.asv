% =========================================================================
% PROYECTO DE GRADUACIÓN: HERRAMIENTAS DE SOFTWARE PARA CRAZYFLIE
% Pablo Javier Caal Leiva - 20538
% -------------------------------------------------------------------------
% Verificación de comandos crazyflie en Matlab
% =========================================================================

%% Comando para iniciar conexión PC-Crazyflie
crazyflie_1 = crazyflie_connect(8);

%% Comando para finalizar conexión PC-Crazyflie
crazyflie_disconnect(crazyflie_1);

%% Comando para realizar el despegue del Crazyflie
crazyflie_takeoff(crazyflie_1);

%% Comando para realizar el aterrizaje del Crazyflie
crazyflie_land(crazyflie_1);

%% Obtención de posición
XYZ = crazyflie_get_position(crazyflie_1)

%% Función de envío de posición
crazyflie_move_to(crazyflie_1, -0.2, 0, 0.5);

%% Función para recuperar la pose del Crazyflie
pose = crazyflie_get_pose(crazyflie_1);

%% Actualización de posición con fuente externa
crazyflie_update_position(crazyflie_1, 0, 0, 0);

%% Lectura de constantes del controlador PID
PID = crazyflie_get_pid(crazyflie_1);

%% Definir las nuevas ganancias PID para cada eje
p_gains = struct('X', 4.5, 'Y', 2.5, 'Z', 2.0);
i_gains = struct('X', 0.1, 'Y', 0.1, 'Z', 0.2);
d_gains = struct('X', 0.0, 'Y', 0.0, 'Z', 0.1);

crazyflie_modify_pid(crazyflie_1, p_gains, i_gains, d_gains);


%% =========================================================================
% PROYECTO DE GRADUACIÓN: HERRAMIENTAS DE SOFTWARE PARA CRAZYFLIE
% Pablo Javier Caal Leiva - 20538
% -------------------------------------------------------------------------
% Verificación de callbacks para fusión de sensores
% =========================================================================


%%
addpath('../Robotat-Matlab-Commands');
%% Conexión con ecosistema robótico y dron


%% %% Evento específico (Event callback)
robotat = robotat_connect();
crazyflie_1 = crazyflie_connect(8);
agent_id = 50;

% Configurar callback para enviar la posición absoluta al dron usando Robotat
agent_id = 1; % Asegúrate de tener el ID del agente correcto
configureCallback(robotat, "byte", 1, @(src, event) crazyflie_robotat_position_callback(crazyflie_1, src, agent_id));
%robotat.BytesAvailableFcnMode = 'byte';  % Modo en que se disparará el callback (por número de bytes)
%robotat.BytesAvailableFcnCount = 1;      % Disparar el callback cuando al menos 1 byte esté disponible
%robotat.BytesAvailableFcn = @(src, event) crazyflie_robotat_position_callback(crazyflie_1, src, agent_id);

Duration = 10; % Duración en segundos
Period = 2; % Lecturas por segundo
N = Duration*Period; % Cantidad de lecturas

Pose_Crazyflie = zeros(N, 6); % Array para lecturas de pose de marker

% Ciclo para realizar lecturas de pose del marker
for i = 1:N
    try 
        Pose_Crazyflie(i,:) = crazyflie_get_pose(crazyflie_1);
    catch ME
        disp('Error al obtener posición.');
        disp(ME.message);
    end 
    pause(1/Period); % Delay de freuencia de muestreo
end

%robotat.BytesAvailableFcn = []; 
configureCallback(robotat, "off");

robotat_disconnect(robotat);
crazyflie_disconnect(crazyflie_1);

%% Gráfica 3D de lecturas
x_Robotat = Pose_Crazyflie(:, 1);
y_Robotat = Pose_Crazyflie(:, 2);
z_Robotat = Pose_Crazyflie(:, 3);

figure;
plot3(x_Robotat, y_Robotat, z_Robotat, '-*');
grid on;
xlabel('X [m]');
ylabel('Y [m]');
zlabel('Z [m]');
title('Trayectoria del marker en 3D');

% Ajustar los límites de los ejes
% xlim([-2 2]);
% ylim([-2.5 2.5]);
% zlim([0 3]);

% Ajustar el espacio 3D
axis equal;
axis([-2 2 -2.5 2.5 0 3]);
view(3); 















%% configuraCallback
robotat = robotat_connect();
%robotat = tcpclient('192.168.50.200', 1883);  
crazyflie_1 = crazyflie_connect(8);           
agent_id = 50;

configureCallback(robotat, "byte", @(src, event) crazyflie_robotat_position_callback(crazyflie_1, src, agent_id));

pause(15); 

configureCallback(robotat, 'off');
robotat_disconnect(robotat); 
crazyflie_disconnect(crazyflie_1);

%% Temporizador (Timer Callback)
robotat = robotat_connect();
crazyflie_1 = crazyflie_connect(8);
agent_id = 50;  

update_timer = timer;
update_timer.Period = 0.5; % Intervalo en segundos
update_timer.ExecutionMode = 'fixedRate';
update_timer.TimerFcn = @(~, ~) crazyflie_robotat_position_callback(crazyflie_1, robotat, agent_id);

start(update_timer);
pause(15); 

stop(update_timer);
delete(update_timer);

robotat_disconnect(robotat);
crazyflie_disconnect(crazyflie_1);